-Usar React + reactdom + babel
	-Quando não usar o web pack.

-npm init (criar package.json)

-npm install -save-dev webpack

-npm install -g webpack-cli

-criar webpack.config.js na raiz do projeto

'use string'

const path = require('path');

module.exports = {
    entry: path.join(__dirname, 'src', 'index'),
    output:{
        path: path.join(__dirname, 'dist'),
        filename: 'bundle.js',
        publicPath: '/static/'
    }
}

-rodar comando webpack para criar o bundle no diretório dist

-npm install -g webpack-dev-server

-npm install -save-dev webpack-dev-server

-para rodar o server
webpack-dev-server


-npm install -save react react-dom

/ a partir da versão 1.16
-npm i create-react-class -save

/ECMA 6
npm i -save-dev babel-core babel-loader babel-preset-es201
5 babel-preset-stage-0

-Criar arquivo na raiz .babelrc
{
    "presets": ["es2015", "stage-0"]
}

-Atualizar o webpack.config

'use string'

const path = require('path');

module.exports = {
    entry: path.join(__dirname, 'src', 'index'),
    output:{
        path: path.join(__dirname, 'dist'),
        filename: 'bundle.js',
        publicPath: '/static/'
    },
    module: {
        rules: [{
            test: /\.js$/,
            exclude: /node_modules/,
            include: /src/,
            use: {
                loader: 'babel-loader'
            }
        }]
    }
}


-Adicionar jsx

npm install -save-dev babel-preset-react

-No arquivo .babelrc

{
    "presets": ["es2015", "stage-0", "react"]
}

-Métodos de importação com ECMA 6

'use strict'

import Title from './app'

import React from 'react';

// Este aqui importa apenas a função render do react-dom
import { render} from 'react-dom';

render(React.createElement(Title),
document.querySelector('[data-js="app"]'));

-Adicionar source maps para debug

'use string'

const path = require('path');

module.exports = {
    devtool: 'source-map',
    entry: path.join(__dirname, 'src', 'index'),
    output:{
        path: path.join(__dirname, 'dist'),
        filename: 'bundle.js',
        publicPath: '/static/'
    },
    module: {
        rules: [{
            test: /\.js$/,
            exclude: /node_modules/,
            include: /src/,
            use: {
                loader: 'babel-loader'
            }
        }]
    }
}



